/* font-face mixin: https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6 */
/* Simple: 					@include font-face(Samplino, fonts/Samplino); */
/* Style and weight: 		@include font-face("Samplina Neue", fonts/SamplinaNeue, bold, italic); */
/* Only some formats: 		@include font-face(Samplinal, fonts/Samplinal, null, null, eot woff2 woff); */

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}



/* sticks the footer to the bottom of the page if the content doesn't take up the whole height of the viewport */
/* need to have a fixed-height footer */
/* simple usage: @include stickyFooter(300px); */
@mixin stickyFooter($footerHeight, $wrapSelector: '.wrap', $footerSelector: 'footer.content-info') {
  html, body:not(#tinymce) {
    height: 100%;
  }

  #{$wrapSelector} {
    min-height: 100%; /* equal to footer height */
    margin-bottom: -$footerHeight;
    &:after {
      content: "";
      display: block;
    }
  }

  #{$footerSelector}, #{$wrapSelector}:after {
    /* .push must be the same height as footer */
    height: $footerHeight; 
  }
}



@mixin aspect-ratio($ratio, $selector: '.inner') {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: $ratio;
  }
  > #{$selector} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}